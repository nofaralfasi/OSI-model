
import javafx.scene.paint.Color;
import javafx.scene.shape.Line;
import javafx.scene.layout.Pane;

public class XPiece implements Player{
	private Pane _gamePane;
	private Line _verticalLine;
	private Line _horizontalLine;

	public XPiece(Pane gamePane, double x, double y) {
		_gamePane = gamePane;
		int startX1 = (int) x + 50;
		int startY1 = (int) y + 25;
		int endX1 = startX1;
		int endY1 = startY1 + 50;
		_verticalLine = new Line(startX1, startY1, endX1, endY1);
		_verticalLine.setFill(Color.BLACK);
		_verticalLine.setScaleX(4);
		_verticalLine.setRotate(45);
		int startX2 = (int) x + 25;
		int startY2 = (int) y + 50;
		int endX2 = startX2 + 50;
		int endY2 = startY2;
		_horizontalLine = new Line(startX2, startY2, endX2, endY2);
		_horizontalLine.setFill(Color.BLACK);
		_horizontalLine.setScaleY(4);
		_horizontalLine.setRotate(45);
		_gamePane.getChildren().addAll(_verticalLine, _horizontalLine);
		
	}
	

	@Override
	public void remove() {
		_gamePane.getChildren().removeAll(_verticalLine, _horizontalLine);
	}
}
///*
//* This code has been generated by the Rebel: a code generator for modern Java.
//* 
//* For more details, please visit www.archetypesoftware.com.
//*
//* Drop us a line or two at feedback@archetypesoftware.com. We would love to hear from you.
//*/
//package com.archetype.rebel;
//
//import java.util.*;
//import java.time.*;
//
//
//
//// ----------- << imports@AAAAAAFnVdFyLAXl/Jo= >>
//// ----------- >>
//
//// ----------- << class.annotations@AAAAAAFnVdFyLAXl/Jo= >>
//// ----------- >>
//public class Player {
//  // ----------- << attribute.annotations@AAAAAAFnVdSSoAa7/8E= >>
//  // ----------- >>
//  private int number;
//
//  // ----------- << attribute.annotations@AAAAAAFnVfx8rQj54NU= >>
//  // ----------- >>
//  private Game game;
//
//  private int getNumber() {
//    return number;
//  }
//
//  private Game getGame() {
//    return game;
//  }
//
//  private void setNumber(int number) {
//    this.number = number;
//  }
//
//  private void setGame(Game game) {
//    this.game = game;
//  }
//
//  public void linkGame(Game _game) {
//    if (_game != null) {
//      _game.getPlayers().add(this);
//    }
//
//    unlinkGame();
//    setGame(_game);
//  }
//
//  public void unlinkGame() {
//    if (getGame() != null) {
//      getGame().getPlayers().remove(this);
//      setGame(null);
//    }
//  }
//
//  /**
//  * @param int n
//  */
//
//  // ----------- << method.annotations@AAAAAAFnVdQVmwZvKQU= >>
//  // ----------- >>
//  public Player(void int n) {
//  // ----------- << method.body@AAAAAAFnVdQVmwZvKQU= >>
//  // ----------- >>
//  }
//  // ----------- << method.annotations@AAAAAAFnVdQMYQZpETU= >>
//  // ----------- >>
//  public Point mark() {
//  // ----------- << method.body@AAAAAAFnVdQMYQZpETU= >>
//  // ----------- >>
//  }
//  /**
//  * @param Board b
//  */
//
//  // ----------- << method.annotations@AAAAAAFnVdQb3wZ1eJ0= >>
//  // ----------- >>
//  public void reviewBoard(void Board b) {
//  // ----------- << method.body@AAAAAAFnVdQb3wZ1eJ0= >>
//  // ----------- >>
//  }
//// ----------- << class.extras@AAAAAAFnVdFyLAXl/Jo= >>
//// ----------- >>
//}